#little longer than it needs to be but nice effecient algo <3
import copy

matrix = open('/Users/nicostuart/Documents/Euler81.txt', 'r').read().split("\n")

for i in range(0,len(matrix)):
    matrix[i]=matrix[i].split(',')
    for j in range(0,len(matrix[i])):
        matrix[i][j]=int(matrix[i][j])

originalmatrix = copy.deepcopy(matrix)

for i in range(0,len(matrix)):
    matrix[0][i]+=matrix[0][i-1]
    matrix[i][0]+=matrix[i-1][0]

for i in range(1,len(matrix)):
    for j in range(1,len(matrix)):
        if matrix[i-1][j] < matrix[i][j-1]:
            matrix[i][j]+=matrix[i-1][j]
        else:
            matrix[i][j] += matrix[i][j-1]

a=len(matrix)-1
b=len(matrix)-1
moves=[]

for i in range(0,(len(matrix)*2)-1):
    moves.append([a,b])
    if a == 0:
        b-=1
        continue
    if b == 0:
        a-=1
        continue

    if matrix[a-1][b] < matrix[a][b-1]:
        a-=1
        continue

    if matrix[a][b-1] < matrix[a-1][b]:
        b -= 1
        continue
total=0
for i in range(0,len(moves)):
    total+=originalmatrix[moves[i][0]][moves[i][1]]
print(total)
