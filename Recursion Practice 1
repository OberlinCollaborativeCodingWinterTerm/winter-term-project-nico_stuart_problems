#Write a Python program of recursion list sum.
#Test Data: [1, 2, [3,4], [5,6]]
#Expected Result: 21

#This works as long as the first item of each nested list is an integer. This is probably bad.

def listsum(x):
    if type(x[-1]) == list and len(list(x[-1])) != 1:
        x[-1]=listsum(x[-1])
    elif type(x[-1]) == list and len(list(x[-1])) == 1:
        x[-1]=x[-1][0]

    while len(x) != 1 and type(x[-1]) != list:
        x[0]+=x.pop(-1)

    if len(x) == 1:
        return x[0]
    else:
        return listsum(x)
